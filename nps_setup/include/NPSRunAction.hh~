//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// $Id: AmagnetRunAction.hh GN 2015$
//
/// \file AmagnetRunAction.hh
/// \brief Definition of the AmagnetRunAction class

// GN 2015 

#ifndef AmagnetRunAction_h
#define AmagnetRunAction_h 1

#include "G4UserRunAction.hh"
#include "globals.hh"

class G4Run;
class AmagnetHistoManager;
class G4LogicalVolume;

/// Run action class
///
/// In EndOfRunAction(), it calculates the dose in the selected volume 
/// from the energy deposit accumulated via stepping and event actions.
/// The computed dose is then printed on the screen.

class AmagnetRunAction : public G4UserRunAction
{
public:
  AmagnetRunAction(AmagnetHistoManager* );
  virtual ~AmagnetRunAction();
  
  virtual G4Run* GenerateRun();
  virtual void BeginOfRunAction(const G4Run*);
  virtual void   EndOfRunAction(const G4Run*);
  void fillPerEvent(G4double, G4double, G4double, G4double);

private:
  AmagnetHistoManager* fHistoManager;
  G4bool fAutoSeed;
  //  G4double fSumEAbs, fSum2EAbs;
  //G4double fSumEGap, fSum2EGap;
    
  //G4double fSumLAbs, fSum2LAbs;
  //G4double fSumLGap, fSum2LGap;    
};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif

